package com.Lukas.Mario.platformer.objects;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.LinkedList;

import com.Lukas.Mario.Window.Game;
import com.Lukas.Mario.Window.Handler;
import com.Lukas.Mario.platformer.framework.GameObject;
import com.Lukas.Mario.platformer.framework.ObjectId;
import com.Lukas.Mario.platformer.framework.Texture;

public class Goomba extends GameObject{
	
private float width = 32, height = 32;
	
private float gravity = 0.35f;
private final float MAX_SPEED = 10;
private int type;
private int reverse = 1;
	
private Handler handler;
	
Texture tex = Game.getInstance();
	
public Goomba(float x, float y, int type, Handler handler, ObjectId id) {
		super(x, y, id);
		this.handler = handler;
	}

	public void tick(LinkedList<GameObject> object) {
		x += velX;
		y += velY;
		
		if(reverse % 2 != 0) {
		velX = -1;
		}else if(reverse % 2 == 0) {
			velX = 1;
		}
		
		if(falling || jumping) {
			velY += gravity;
		
		
		if(velY > MAX_SPEED)
			velY = MAX_SPEED;
		}
		
		Collision(object);
	}
	
	private void Collision(LinkedList<GameObject> object) {
		for(int i = 0; i < handler.object.size(); i++) {
			GameObject tempObject = handler.object.get(i);
			
			if(tempObject.getId() == ObjectId.Block) {
				
			if(getBounds().intersects(tempObject.getBounds())) {
				y = tempObject.getY() - height;
				velY = 0;
				falling = false;
				jumping = false;
			}else {
				falling = true;
			}
			
			
			if(getBoundsLeft().intersects(tempObject.getBounds())) {
				reverse++;
				x = tempObject.getX() + width + 8;
				}
			if(getBoundsRight().intersects(tempObject.getBounds())) {
				reverse++;
				x = tempObject.getX() - width - 8;
				}
			}
			if(tempObject.getId() == ObjectId.DeathBlock) {
				
				if(getBounds().intersects(tempObject.getBounds())) {
					
					if(reverse % 2 != 0) {
						x = tempObject.getX() + width + 8;
					}
					if(reverse % 2 == 0) {
						x = tempObject.getX() - width - 8;
					}
					reverse++;
				}
				}
		}
		}


	public void render(Graphics g) {
			g.drawImage(tex.enemy[0], (int) x, (int) y, null);
			
	}
	
	public Rectangle getBoundsTop() {
		return new Rectangle((int) x, (int)y, 32, (int)height/8);
	}

	public Rectangle getBounds() {
		return new Rectangle((int) x, (int) ((int)y + (height)), 32, (int)height/8);
	}
	public Rectangle getBoundsRight() {
		return new Rectangle((int) ((int)x + width - 5), (int)y + 5, (int)5, (int)height-10);
	}
	
	public Rectangle getBoundsLeft() {
		return new Rectangle((int)x, (int)y + 5, (int)5, (int)height-10);
	}

}
